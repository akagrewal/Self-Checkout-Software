

    //Screen 3 Payment Panel (Coin Coin)


    /*
     * 3-part Method that causes a Numberpad
     */
    class TransparentNumpadPanel extends JPanel {
        private JFrame parentFrame;


        public TransparentNumpadPanel(JFrame parentFrame) {
            this.parentFrame = parentFrame;
            setOpaque(true); // Make the panel transparent
            setLayout(new GridBagLayout());
            setPreferredSize(new Dimension(400, 400)); // Set the preferred size to 400x400
        }


        @Override
        protected void paintComponent(Graphics g) {
            super.paintComponent(g);


            // Draw a semi-transparent background
            Graphics2D g2d = (Graphics2D) g.create();
            g2d.setColor(new Color(128, 128, 128, 128)); // 128, 128, 128 is grey, 128 is the alpha value
            g2d.fillRect(0, 0, getWidth(), getHeight());
            g2d.dispose();
        }


        public void addNumPadButtons() {
            // Create buttons and add them to the center of the panel
            JButton button1 = new JButton("1");
            JButton button2 = new JButton("2");
            JButton button3 = new JButton("3");
            JButton button4 = new JButton("1");
            JButton button5 = new JButton("2");
            JButton button6 = new JButton("3");
            JButton button7 = new JButton("1");
            JButton button8 = new JButton("2");
            JButton button9 = new JButton("3");
            JButton buttonCLEAR = new JButton("CLEAR");
            JButton button0 = new JButton("0");
            JButton buttonENTER = new JButton("ENTER");


            GridBagConstraints gbc = new GridBagConstraints();
            //Placements of Button (indentation for readability)
            gbc.gridy = 0;
            gbc.gridx = 0;
            add(button1, gbc);
            gbc.gridx = 1;
            add(button2, gbc);
            gbc.gridx = 2;
            add(button3, gbc);
            gbc.gridx = 1;
            gbc.gridx = 0;
            add(button4, gbc);
            gbc.gridx = 1;
            add(button5, gbc);
            gbc.gridx = 2;
            add(button6, gbc);





            button1.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    guiLogicInstance.addItemPopUp_button1_CustomersAddsToBaggingArea();
                    closeNumPadPanel();
                }
            });
            button2.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    guiLogicInstance.addItemPopUp_button2_CustomersDOESNOTAddsToBaggingArea();
                    closeNumPadPanel();
                }
            });
            button3.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    guiLogicInstance.addItemPopUp_button3_BLANK();
                    closeNumPadPanel();
                }
            });
        }
    }
    /*
     * NumberPad Pop Up Part 2/3
     * What causes the Overlay to show up
     *
     * If needed, copy paste this code for each Add Item
     */
    private void openNumPadPanel() {
        // Create a transparent overlay panel
        TransparentNumpadPanel numpadPanel = new TransparentNumpadPanel(this);


        // Add buttons to the overlay panel
        numpadPanel.addNumPadButtons();


        // Add the overlay panel to the main frame
        setGlassPane(numpadPanel);
        numpadPanel.setVisible(true);
    }

    /*
     * NumberPad Pop Up Part 3/3
     * What causes the Overlay to disappear
     */
    private void closeNumPadPanel() {
        TransparentNumpadPanel numpadPanel = new TransparentNumpadPanel(this);
        numpadPanel.addNumPadButtons();
        setGlassPane(numpadPanel);
        numpadPanel.setVisible(false);
    }



    //-----------------------------------------
    /*
     * Add Item Pop Up Part 1/3
     *
     * When Customer adds any Item, it will cause GUI to show up and ask if
     * Customer would place item into Bagging Area or Not
     * 3rd Option is Extra Button
     */
    class TransparentOverlayPanel extends JPanel {
        private JFrame parentFrame;


        public TransparentOverlayPanel(JFrame parentFrame) {
            this.parentFrame = parentFrame;
            setOpaque(true); // Make the panel transparent
            setLayout(new GridBagLayout());
            setPreferredSize(new Dimension(400, 400)); // Set the preferred size to 400x400
        }


        @Override
        protected void paintComponent(Graphics g) {
            super.paintComponent(g);


            // Draw a semi-transparent background
            Graphics2D g2d = (Graphics2D) g.create();
            g2d.setColor(new Color(128, 128, 128, 128)); // 128, 128, 128 is grey, 128 is the alpha value
            g2d.fillRect(0, 0, getWidth(), getHeight());
            g2d.dispose();
        }


        public void addCenteredButtons() {
            // Create buttons and add them to the center of the panel
            JButton button1 = new JButton("Button 1");
            JButton button2 = new JButton("Button 2");
            JButton button3 = new JButton("Button 3");


            GridBagConstraints gbc = new GridBagConstraints();
            gbc.gridx = 0;
            gbc.gridy = 0;
            add(button1, gbc);


            gbc.gridy = 1;
            add(button2, gbc);


            gbc.gridy = 2;
            add(button3, gbc);


            button1.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    guiLogicInstance.addItemPopUp_button1_CustomersAddsToBaggingArea();
                    closeOverlayPanel();
                }
            });
            button2.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    guiLogicInstance.addItemPopUp_button2_CustomersDOESNOTAddsToBaggingArea();
                    closeOverlayPanel();
                }
            });
            button3.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    guiLogicInstance.addItemPopUp_button3_BLANK();
                    closeOverlayPanel();
                }
            });
        }
    }
    /*
     * Add Item Pop Up Part 2/3
     * What causes the Overlay to show up
     *
     * If needed, copy paste this code for each Add Item
     */
    private void openOverlayPanel() {
        // Create a transparent overlay panel
        TransparentOverlayPanel overlayPanel = new TransparentOverlayPanel(this);


        // Add buttons to the overlay panel
        overlayPanel.addCenteredButtons();


        // Add the overlay panel to the main frame
        setGlassPane(overlayPanel);
        overlayPanel.setVisible(true);
    }

    /*
     * Add Item Pop Up Part 3/3
     * What causes the Overlay to disappear
     */
    private void closeOverlayPanel() {
        TransparentOverlayPanel overlayPanel = new TransparentOverlayPanel(this);
        overlayPanel.addCenteredButtons();
        setGlassPane(overlayPanel);
        overlayPanel.setVisible(false);
    }
